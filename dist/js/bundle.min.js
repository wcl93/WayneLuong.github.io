!function(n){var e={};function t(c){if(e[c])return e[c].exports;var r=e[c]={i:c,l:!1,exports:{}};return n[c].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(c,r,function(e){return n[e]}.bind(null,r));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(n,e,t){t(1),n.exports=t(2)},function(n,e){$(document).ready(function(){$("a").on("click",function(n){if(""!==this.hash){n.preventDefault();var e=this.hash;$("html, body").animate({scrollTop:$(e).offset().top},800,function(){window.location.hash=e})}})}),window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const t=document.querySelector("#menubtn"),c=document.querySelector(".menu"),r=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item1")),o=document.querySelector(".menu-Item2"),l=document.querySelector(".menu-Item3"),i=document.querySelector(".menu-Item4");let a=!1;$(t).on("click",()=>{a?a&&(t.classList.remove("close"),c.classList.remove("show"),a=!1):(t.classList.add("close"),c.classList.add("show"),a=!0)}),$(r).on("click",()=>{$(r).addClass("active"),$(o).removeClass("active"),$(l).removeClass("active"),$(i).removeClass("active")}),$(o).on("click",()=>{$(r).removeClass("active"),$(o).addClass("active"),$(l).removeClass("active"),$(i).removeClass("active")}),$(l).on("click",()=>{$(r).removeClass("active"),$(o).removeClass("active"),$(l).addClass("active"),$(i).removeClass("active")}),$(i).on("click",()=>{$(r).removeClass("active"),$(o).removeClass("active"),$(l).removeClass("active"),$(i).addClass("active")}),window.sr=ScrollReveal(),sr.reveal("#home h1",{duration:2e3,origin:"top"}),sr.reveal("#home h2",{duration:2e3,origin:"top"}),sr.reveal("#home h3",{duration:5e3,origin:"left",delay:1e3}),sr.reveal("#home a",{duration:5e3,origin:"left",delay:1500}),sr.reveal("#about h1",{duration:2e3,origin:"right",viewFactor:.2}),sr.reveal("#about h2",{duration:2500,origin:"right",viewFactor:.2}),sr.reveal("#about p",{duration:2500,origin:"right",delay:500,viewFactor:.2}),sr.reveal("#container",{duration:2500,origin:"right",delay:1e3,viewFactor:.2}),sr.reveal("#banner h2",{duration:2500,origin:"right",delay:1e3,viewFactor:.2}),sr.reveal("#portfolio h1",{duration:2e3,origin:"right",viewFactor:.2}),sr.reveal("#contact h1",{duration:2e3,origin:"right",viewFactor:.2}),sr.reveal("#contact h2",{duration:2e3,delay:500,origin:"right",viewFactor:.2}),sr.reveal("#contact a",{duration:2e3,delay:1e3,origin:"right",viewFactor:.2})},function(module,exports){!function(n){var e={};function t(c){if(e[c])return e[c].exports;var r=e[c]={i:c,l:!1,exports:{}};return n[c].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(c,r,function(e){return n[e]}.bind(null,r));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}({"./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no static exports found */function(module,exports){eval("/* require('navmenu.js'); */\r\n\r\n/* -----------Smooth scroll -------------*/\r\n$(document).ready(function () {\r\n    // Add smooth scrolling to all links\r\n    $(\"a\").on('click', function (event) {\r\n\r\n        // Make sure this.hash has a value before overriding default behavior\r\n        if (this.hash !== \"\") {\r\n            // Prevent default anchor click behavior\r\n            event.preventDefault();\r\n\r\n            // Store hash\r\n            var hash = this.hash;\r\n\r\n            // Using jQuery's animate() method to add smooth page scroll\r\n            // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area\r\n            $('html, body').animate({\r\n                scrollTop: $(hash).offset().top\r\n            }, 800, function () {\r\n\r\n                // Add hash (#) to URL when done scrolling (default click behavior)\r\n                window.location.hash = hash;\r\n            });\r\n        } // End if\r\n    });\r\n});\r\n\r\n/* ----------------------preloader---------------------------- */\r\nwindow.addEventListener('load', () => {\r\n    $('#status').fadeOut()\r\n    $('#loadercontainer').fadeOut();\r\n    $('#preloader').delay(300).fadeOut();\r\n});\r\n\r\n\r\n/*----------------------------- Menu button---------------------- */\r\nconst menuBtn = document.querySelector('#menubtn');\r\n\r\nconst menu = document.querySelector('.menu');\r\nconst menuNav = document.querySelector('.menu-nav');\r\nconst menuItem1 = document.querySelector('.menu-Item1');\r\nconst menuItem2 = document.querySelector('.menu-Item2');\r\nconst menuItem3 = document.querySelector('.menu-Item3');\r\nconst menuItem4 = document.querySelector('.menu-Item4');\r\n/* const navItems = document.querySelectorAll('.menu-Item'); */\r\n\r\nlet showMenu = false;\r\n\r\n$(menuBtn).on('click', () => {\r\n    if (!showMenu) {\r\n        menuBtn.classList.add('close');\r\n        menu.classList.add('show');\r\n        /* menuItem.classList.add('show'); */\r\n        /* navItems.classList.add('show'); */\r\n\r\n        showMenu = true;\r\n    } else if (showMenu) {\r\n        menuBtn.classList.remove('close');\r\n        menu.classList.remove('show');\r\n        /* menuItem.classList.remove('show'); */\r\n        /* navItems.classList.remove('show'); */\r\n\r\n        showMenu = false;\r\n    }\r\n});\r\n\r\n/* -------------------------------Menu Items -----------------------*/\r\n$(menuItem1).on('click', () => {\r\n    $(menuItem1).addClass('active');\r\n    $(menuItem2).removeClass('active');\r\n    $(menuItem3).removeClass('active');\r\n    $(menuItem4).removeClass('active');\r\n});\r\n$(menuItem2).on('click', () => {\r\n    $(menuItem1).removeClass('active');\r\n    $(menuItem2).addClass('active');\r\n    $(menuItem3).removeClass('active');\r\n    $(menuItem4).removeClass('active');\r\n});\r\n$(menuItem3).on('click', () => {\r\n    $(menuItem1).removeClass('active');\r\n    $(menuItem2).removeClass('active');\r\n    $(menuItem3).addClass('active');\r\n    $(menuItem4).removeClass('active');\r\n});\r\n$(menuItem4).on('click', () => {\r\n    $(menuItem1).removeClass('active');\r\n    $(menuItem2).removeClass('active');\r\n    $(menuItem3).removeClass('active');\r\n    $(menuItem4).addClass('active');\r\n});\r\n\r\n/* $('a').on('click', function(e){\r\n    e.preventDefault()\r\n    alert('clik');\r\n}) */\r\n\r\n/* Scroll Reveal */\r\n\r\nwindow.sr = ScrollReveal();\r\nsr.reveal('#home h1', {\r\n    duration: 2000,\r\n    origin: 'top'\r\n});\r\nsr.reveal('#home h2', {\r\n    duration: 2000,\r\n    origin: 'top'\r\n});\r\nsr.reveal('#home h3', {\r\n    duration: 5000,\r\n    origin: 'left',\r\n    delay: 1000\r\n});\r\nsr.reveal('#home a', {\r\n    duration: 5000,\r\n    origin: 'left',\r\n    delay: 1500,\r\n});\r\nsr.reveal('#about h1', {\r\n    duration: 2000,\r\n    origin: 'right',\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#about h2', {\r\n    duration: 2500,\r\n    origin: 'right',\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#about p', {\r\n    duration: 2500,\r\n    origin: 'right',\r\n    delay: 500,\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#container', {\r\n    duration: 2500,\r\n    origin: 'right',\r\n    delay: 1000,\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#banner h2', {\r\n    duration: 2500,\r\n    origin: 'right',\r\n    delay: 1000,\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#portfolio h1', {\r\n    duration: 2000,\r\n    origin: 'right',\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#contact h1', {\r\n    duration: 2000,\r\n    origin: 'right',\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#contact h2', {\r\n    duration: 2000,\r\n    delay: 500,\r\n    origin: 'right',\r\n    viewFactor: 0.2\r\n});\r\nsr.reveal('#contact a', {\r\n    duration: 2000,\r\n    delay:1000,\r\n    origin: 'right',\r\n    viewFactor: 0.2\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9tYWluLmpzPzkyOTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogcmVxdWlyZSgnbmF2bWVudS5qcycpOyAqL1xyXG5cclxuLyogLS0tLS0tLS0tLS1TbW9vdGggc2Nyb2xsIC0tLS0tLS0tLS0tLS0qL1xyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBBZGQgc21vb3RoIHNjcm9sbGluZyB0byBhbGwgbGlua3NcclxuICAgICQoXCJhXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xyXG5cclxuICAgICAgICAvLyBNYWtlIHN1cmUgdGhpcy5oYXNoIGhhcyBhIHZhbHVlIGJlZm9yZSBvdmVycmlkaW5nIGRlZmF1bHQgYmVoYXZpb3JcclxuICAgICAgICBpZiAodGhpcy5oYXNoICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIC8vIFByZXZlbnQgZGVmYXVsdCBhbmNob3IgY2xpY2sgYmVoYXZpb3JcclxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIFN0b3JlIGhhc2hcclxuICAgICAgICAgICAgdmFyIGhhc2ggPSB0aGlzLmhhc2g7XHJcblxyXG4gICAgICAgICAgICAvLyBVc2luZyBqUXVlcnkncyBhbmltYXRlKCkgbWV0aG9kIHRvIGFkZCBzbW9vdGggcGFnZSBzY3JvbGxcclxuICAgICAgICAgICAgLy8gVGhlIG9wdGlvbmFsIG51bWJlciAoODAwKSBzcGVjaWZpZXMgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdGFrZXMgdG8gc2Nyb2xsIHRvIHRoZSBzcGVjaWZpZWQgYXJlYVxyXG4gICAgICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxUb3A6ICQoaGFzaCkub2Zmc2V0KCkudG9wXHJcbiAgICAgICAgICAgIH0sIDgwMCwgZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIEFkZCBoYXNoICgjKSB0byBVUkwgd2hlbiBkb25lIHNjcm9sbGluZyAoZGVmYXVsdCBjbGljayBiZWhhdmlvcilcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gaGFzaDtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSAvLyBFbmQgaWZcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1wcmVsb2FkZXItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xyXG4gICAgJCgnI3N0YXR1cycpLmZhZGVPdXQoKVxyXG4gICAgJCgnI2xvYWRlcmNvbnRhaW5lcicpLmZhZGVPdXQoKTtcclxuICAgICQoJyNwcmVsb2FkZXInKS5kZWxheSgzMDApLmZhZGVPdXQoKTtcclxufSk7XHJcblxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBNZW51IGJ1dHRvbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuY29uc3QgbWVudUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtZW51YnRuJyk7XHJcblxyXG5jb25zdCBtZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnUnKTtcclxuY29uc3QgbWVudU5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tZW51LW5hdicpO1xyXG5jb25zdCBtZW51SXRlbTEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1JdGVtMScpO1xyXG5jb25zdCBtZW51SXRlbTIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1JdGVtMicpO1xyXG5jb25zdCBtZW51SXRlbTMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1JdGVtMycpO1xyXG5jb25zdCBtZW51SXRlbTQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1JdGVtNCcpO1xyXG4vKiBjb25zdCBuYXZJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tZW51LUl0ZW0nKTsgKi9cclxuXHJcbmxldCBzaG93TWVudSA9IGZhbHNlO1xyXG5cclxuJChtZW51QnRuKS5vbignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBpZiAoIXNob3dNZW51KSB7XHJcbiAgICAgICAgbWVudUJ0bi5jbGFzc0xpc3QuYWRkKCdjbG9zZScpO1xyXG4gICAgICAgIG1lbnUuY2xhc3NMaXN0LmFkZCgnc2hvdycpO1xyXG4gICAgICAgIC8qIG1lbnVJdGVtLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTsgKi9cclxuICAgICAgICAvKiBuYXZJdGVtcy5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7ICovXHJcblxyXG4gICAgICAgIHNob3dNZW51ID0gdHJ1ZTtcclxuICAgIH0gZWxzZSBpZiAoc2hvd01lbnUpIHtcclxuICAgICAgICBtZW51QnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NlJyk7XHJcbiAgICAgICAgbWVudS5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XHJcbiAgICAgICAgLyogbWVudUl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpOyAqL1xyXG4gICAgICAgIC8qIG5hdkl0ZW1zLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTsgKi9cclxuXHJcbiAgICAgICAgc2hvd01lbnUgPSBmYWxzZTtcclxuICAgIH1cclxufSk7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tTWVudSBJdGVtcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiQobWVudUl0ZW0xKS5vbignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAkKG1lbnVJdGVtMSkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgJChtZW51SXRlbTIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICQobWVudUl0ZW0zKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAkKG1lbnVJdGVtNCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG59KTtcclxuJChtZW51SXRlbTIpLm9uKCdjbGljaycsICgpID0+IHtcclxuICAgICQobWVudUl0ZW0xKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAkKG1lbnVJdGVtMikuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgJChtZW51SXRlbTMpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICQobWVudUl0ZW00KS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbn0pO1xyXG4kKG1lbnVJdGVtMykub24oJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgJChtZW51SXRlbTEpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICQobWVudUl0ZW0yKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAkKG1lbnVJdGVtMykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgJChtZW51SXRlbTQpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxufSk7XHJcbiQobWVudUl0ZW00KS5vbignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAkKG1lbnVJdGVtMSkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgJChtZW51SXRlbTIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICQobWVudUl0ZW0zKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAkKG1lbnVJdGVtNCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG59KTtcclxuXHJcbi8qICQoJ2EnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKXtcclxuICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gICAgYWxlcnQoJ2NsaWsnKTtcclxufSkgKi9cclxuXHJcbi8qIFNjcm9sbCBSZXZlYWwgKi9cclxuXHJcbndpbmRvdy5zciA9IFNjcm9sbFJldmVhbCgpO1xyXG5zci5yZXZlYWwoJyNob21lIGgxJywge1xyXG4gICAgZHVyYXRpb246IDIwMDAsXHJcbiAgICBvcmlnaW46ICd0b3AnXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNob21lIGgyJywge1xyXG4gICAgZHVyYXRpb246IDIwMDAsXHJcbiAgICBvcmlnaW46ICd0b3AnXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNob21lIGgzJywge1xyXG4gICAgZHVyYXRpb246IDUwMDAsXHJcbiAgICBvcmlnaW46ICdsZWZ0JyxcclxuICAgIGRlbGF5OiAxMDAwXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNob21lIGEnLCB7XHJcbiAgICBkdXJhdGlvbjogNTAwMCxcclxuICAgIG9yaWdpbjogJ2xlZnQnLFxyXG4gICAgZGVsYXk6IDE1MDAsXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNhYm91dCBoMScsIHtcclxuICAgIGR1cmF0aW9uOiAyMDAwLFxyXG4gICAgb3JpZ2luOiAncmlnaHQnLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNhYm91dCBoMicsIHtcclxuICAgIGR1cmF0aW9uOiAyNTAwLFxyXG4gICAgb3JpZ2luOiAncmlnaHQnLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNhYm91dCBwJywge1xyXG4gICAgZHVyYXRpb246IDI1MDAsXHJcbiAgICBvcmlnaW46ICdyaWdodCcsXHJcbiAgICBkZWxheTogNTAwLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNjb250YWluZXInLCB7XHJcbiAgICBkdXJhdGlvbjogMjUwMCxcclxuICAgIG9yaWdpbjogJ3JpZ2h0JyxcclxuICAgIGRlbGF5OiAxMDAwLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNiYW5uZXIgaDInLCB7XHJcbiAgICBkdXJhdGlvbjogMjUwMCxcclxuICAgIG9yaWdpbjogJ3JpZ2h0JyxcclxuICAgIGRlbGF5OiAxMDAwLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNwb3J0Zm9saW8gaDEnLCB7XHJcbiAgICBkdXJhdGlvbjogMjAwMCxcclxuICAgIG9yaWdpbjogJ3JpZ2h0JyxcclxuICAgIHZpZXdGYWN0b3I6IDAuMlxyXG59KTtcclxuc3IucmV2ZWFsKCcjY29udGFjdCBoMScsIHtcclxuICAgIGR1cmF0aW9uOiAyMDAwLFxyXG4gICAgb3JpZ2luOiAncmlnaHQnLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNjb250YWN0IGgyJywge1xyXG4gICAgZHVyYXRpb246IDIwMDAsXHJcbiAgICBkZWxheTogNTAwLFxyXG4gICAgb3JpZ2luOiAncmlnaHQnLFxyXG4gICAgdmlld0ZhY3RvcjogMC4yXHJcbn0pO1xyXG5zci5yZXZlYWwoJyNjb250YWN0IGEnLCB7XHJcbiAgICBkdXJhdGlvbjogMjAwMCxcclxuICAgIGRlbGF5OjEwMDAsXHJcbiAgICBvcmlnaW46ICdyaWdodCcsXHJcbiAgICB2aWV3RmFjdG9yOiAwLjJcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/main.js\n")},0:
/*!***************************************************!*\
  !*** multi ./src/js/main.js ./dist/bundle.min.js ***!
  \***************************************************/
/*! no static exports found */function(n,e,t){t(/*! C:\Users\Wayne\Desktop\website-template\src\js\main.js */"./src/js/main.js"),function(){var n=new Error("Cannot find module './dist/bundle.min.js'");throw n.code="MODULE_NOT_FOUND",n}()}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,