!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){$(document).ready(function(){$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var t=this.hash;$("html, body").animate({scrollTop:$(t).offset().top},800,function(){window.location.hash=t})}})}),window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),n=document.querySelector(".menu"),r=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item1")),c=document.querySelector(".menu-Item2"),a=document.querySelector(".menu-Item3"),u=document.querySelector(".menu-Item4");let l=!1;$(o).on("click",()=>{l?l&&(o.classList.remove("close"),n.classList.remove("show"),l=!1):(o.classList.add("close"),n.classList.add("show"),l=!0)}),$(r).on("click",()=>{$(r).addClass("active"),$(c).removeClass("active"),$(a).removeClass("active"),$(u).removeClass("active")}),$(c).on("click",()=>{$(r).removeClass("active"),$(c).addClass("active"),$(a).removeClass("active"),$(u).removeClass("active")}),$(a).on("click",()=>{$(r).removeClass("active"),$(c).removeClass("active"),$(a).addClass("active"),$(u).removeClass("active")}),$(u).on("click",()=>{$(r).removeClass("active"),$(c).removeClass("active"),$(a).removeClass("active"),$(u).addClass("active")})},function(e,t){!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),n=document.querySelector(".menu"),r=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item"));let c=!1;$(o).on("click",()=>{c?c&&(o.classList.remove("close"),n.classList.remove("show"),r.classList.remove("show"),c=!1):(o.classList.add("close"),n.classList.add("show"),r.classList.add("show"),c=!0)})},function(e,t){}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,