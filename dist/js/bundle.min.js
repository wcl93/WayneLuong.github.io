!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){$(document).ready(function(){$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var t=this.hash;$("html, body").animate({scrollTop:$(t).offset().top},800,function(){window.location.hash=t})}})}),window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),r=document.querySelector(".menu"),n=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item1")),a=document.querySelector(".menu-Item2"),c=document.querySelector(".menu-Item3"),i=document.querySelector(".menu-Item4");let l=!1;$(o).on("click",()=>{l?l&&(o.classList.remove("close"),r.classList.remove("show"),l=!1):(o.classList.add("close"),r.classList.add("show"),l=!0)}),$(n).on("click",()=>{$(n).addClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(a).on("click",()=>{$(n).removeClass("active"),$(a).addClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(c).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).addClass("active"),$(i).removeClass("active")}),$(i).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).addClass("active")}),window.sr=ScrollReveal(),sr.reveal("#home h1",{duration:2e3,origin:"top"}),sr.reveal("#home h2",{duration:2e3,origin:"top"}),sr.reveal("#home h3",{duration:5e3,origin:"left",delay:1e3}),sr.reveal("#home a",{duration:5e3,origin:"left",delay:1500}),sr.reveal("#about h1",{duration:2e3,origin:"right",viewFactor:.2}),sr.reveal("#about h2",{duration:2500,origin:"right",viewFactor:.2}),sr.reveal("#about p",{duration:2500,origin:"right",delay:500,viewFactor:.2}),sr.reveal("#container",{duration:2500,origin:"right",delay:1e3,viewFactor:.2}),sr.reveal("#banner h2",{duration:2500,origin:"right",delay:1e3,viewFactor:.2}),sr.reveal("#portfolio h1",{duration:2e3,origin:"right",viewFactor:.2}),sr.reveal("#contact h1",{duration:2e3,origin:"right",viewFactor:.2}),sr.reveal("#contact h2",{duration:2e3,delay:500,origin:"right",viewFactor:.2}),sr.reveal("#contact a",{duration:2e3,delay:1e3,origin:"right",viewFactor:.2})},function(e,t){!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){$(document).ready(function(){$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var t=this.hash;$("html, body").animate({scrollTop:$(t).offset().top},800,function(){window.location.hash=t})}})}),window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),r=document.querySelector(".menu"),n=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item1")),a=document.querySelector(".menu-Item2"),c=document.querySelector(".menu-Item3"),i=document.querySelector(".menu-Item4");let l=!1;$(o).on("click",()=>{l?l&&(o.classList.remove("close"),r.classList.remove("show"),l=!1):(o.classList.add("close"),r.classList.add("show"),l=!0)}),$(n).on("click",()=>{$(n).addClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(a).on("click",()=>{$(n).removeClass("active"),$(a).addClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(c).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).addClass("active"),$(i).removeClass("active")}),$(i).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).addClass("active")})},function(e,t){!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){$(document).ready(function(){$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var t=this.hash;$("html, body").animate({scrollTop:$(t).offset().top},800,function(){window.location.hash=t})}})}),window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),r=document.querySelector(".menu"),n=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item1")),a=document.querySelector(".menu-Item2"),c=document.querySelector(".menu-Item3"),i=document.querySelector(".menu-Item4");let l=!1;$(o).on("click",()=>{l?l&&(o.classList.remove("close"),r.classList.remove("show"),l=!1):(o.classList.add("close"),r.classList.add("show"),l=!0)}),$(n).on("click",()=>{$(n).addClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(a).on("click",()=>{$(n).removeClass("active"),$(a).addClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(c).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).addClass("active"),$(i).removeClass("active")}),$(i).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).addClass("active")})},function(e,t){!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){$(document).ready(function(){$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var t=this.hash;$("html, body").animate({scrollTop:$(t).offset().top},800,function(){window.location.hash=t})}})}),window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),r=document.querySelector(".menu"),n=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item1")),a=document.querySelector(".menu-Item2"),c=document.querySelector(".menu-Item3"),i=document.querySelector(".menu-Item4");let l=!1;$(o).on("click",()=>{l?l&&(o.classList.remove("close"),r.classList.remove("show"),l=!1):(o.classList.add("close"),r.classList.add("show"),l=!0)}),$(n).on("click",()=>{$(n).addClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(a).on("click",()=>{$(n).removeClass("active"),$(a).addClass("active"),$(c).removeClass("active"),$(i).removeClass("active")}),$(c).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).addClass("active"),$(i).removeClass("active")}),$(i).on("click",()=>{$(n).removeClass("active"),$(a).removeClass("active"),$(c).removeClass("active"),$(i).addClass("active")})},function(e,t){!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){o(1),e.exports=o(2)},function(e,t){window.addEventListener("load",()=>{$("#status").fadeOut(),$("#loadercontainer").fadeOut(),$("#preloader").delay(300).fadeOut()});const o=document.querySelector("#menubtn"),r=document.querySelector(".menu"),n=(document.querySelector(".menu-nav"),document.querySelector(".menu-Item"));let a=!1;$(o).on("click",()=>{a?a&&(o.classList.remove("close"),r.classList.remove("show"),n.classList.remove("show"),a=!1):(o.classList.add("close"),r.classList.add("show"),n.classList.add("show"),a=!0)})},function(e,t){}])}])}])}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,